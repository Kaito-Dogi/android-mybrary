package app.kaito_dogi.mybrary.core.designsystem.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

private val primaryLight = Color(0xFF266A4A)
private val onPrimaryLight = Color(0xFFFFFFFF)
private val primaryContainerLight = Color(0xFFACF2C8)
private val onPrimaryContainerLight = Color(0xFF002112)
private val secondaryLight = Color(0xFF34693F)
private val onSecondaryLight = Color(0xFFFFFFFF)
private val secondaryContainerLight = Color(0xFFB6F1BC)
private val onSecondaryContainerLight = Color(0xFF00210A)
private val tertiaryLight = Color(0xFF8E4954)
private val onTertiaryLight = Color(0xFFFFFFFF)
private val tertiaryContainerLight = Color(0xFFFFD9DD)
private val onTertiaryContainerLight = Color(0xFF3B0714)
private val errorLight = Color(0xFF8F4A50)
private val onErrorLight = Color(0xFFFFFFFF)
private val errorContainerLight = Color(0xFFFFDADB)
private val onErrorContainerLight = Color(0xFF3B0810)
private val backgroundLight = Color(0xFFF6FBF4)
private val onBackgroundLight = Color(0xFF171D19)
private val surfaceLight = Color(0xFFF6FBF4)
private val onSurfaceLight = Color(0xFF171D19)
private val surfaceVariantLight = Color(0xFFDCE5DC)
private val onSurfaceVariantLight = Color(0xFF404943)
private val outlineLight = Color(0xFF707972)
private val outlineVariantLight = Color(0xFFC0C9C1)
private val scrimLight = Color(0xFF000000)
private val inverseSurfaceLight = Color(0xFF2C322E)
private val inverseOnSurfaceLight = Color(0xFFEDF2EC)
private val inversePrimaryLight = Color(0xFF91D5AD)
private val surfaceDimLight = Color(0xFFD6DBD5)
private val surfaceBrightLight = Color(0xFFF6FBF4)
private val surfaceContainerLowestLight = Color(0xFFFFFFFF)
private val surfaceContainerLowLight = Color(0xFFF0F5EE)
private val surfaceContainerLight = Color(0xFFEAEFE9)
private val surfaceContainerHighLight = Color(0xFFE4EAE3)
private val surfaceContainerHighestLight = Color(0xFFDFE4DD)

private val primaryDark = Color(0xFF91D5AD)
private val onPrimaryDark = Color(0xFF003822)
private val primaryContainerDark = Color(0xFF025233)
private val onPrimaryContainerDark = Color(0xFFACF2C8)
private val secondaryDark = Color(0xFF9AD4A1)
private val onSecondaryDark = Color(0xFF003916)
private val secondaryContainerDark = Color(0xFF1A512A)
private val onSecondaryContainerDark = Color(0xFFB6F1BC)
private val tertiaryDark = Color(0xFFFFB2BB)
private val onTertiaryDark = Color(0xFF561D28)
private val tertiaryContainerDark = Color(0xFF72333D)
private val onTertiaryContainerDark = Color(0xFFFFD9DD)
private val errorDark = Color(0xFFFFB2B7)
private val onErrorDark = Color(0xFF561D24)
private val errorContainerDark = Color(0xFF723339)
private val onErrorContainerDark = Color(0xFFFFDADB)
private val backgroundDark = Color(0xFF0F1511)
private val onBackgroundDark = Color(0xFFDFE4DD)
private val surfaceDark = Color(0xFF0F1511)
private val onSurfaceDark = Color(0xFFDFE4DD)
private val surfaceVariantDark = Color(0xFF404943)
private val onSurfaceVariantDark = Color(0xFFC0C9C1)
private val outlineDark = Color(0xFF8A938B)
private val outlineVariantDark = Color(0xFF404943)
private val scrimDark = Color(0xFF000000)
private val inverseSurfaceDark = Color(0xFFDFE4DD)
private val inverseOnSurfaceDark = Color(0xFF2C322E)
private val inversePrimaryDark = Color(0xFF266A4A)
private val surfaceDimDark = Color(0xFF0F1511)
private val surfaceBrightDark = Color(0xFF353B36)
private val surfaceContainerLowestDark = Color(0xFF0A0F0C)
private val surfaceContainerLowDark = Color(0xFF171D19)
private val surfaceContainerDark = Color(0xFF1B211D)
private val surfaceContainerHighDark = Color(0xFF262B27)
private val surfaceContainerHighestDark = Color(0xFF303632)

internal val mybraryLightColorScheme = lightColorScheme(
  primary = primaryLight,
  onPrimary = onPrimaryLight,
  primaryContainer = primaryContainerLight,
  onPrimaryContainer = onPrimaryContainerLight,
  inversePrimary = inversePrimaryLight,
  secondary = secondaryLight,
  onSecondary = onSecondaryLight,
  secondaryContainer = secondaryContainerLight,
  onSecondaryContainer = onSecondaryContainerLight,
  tertiary = tertiaryLight,
  onTertiary = onTertiaryLight,
  tertiaryContainer = tertiaryContainerLight,
  onTertiaryContainer = onTertiaryContainerLight,
  background = backgroundLight,
  onBackground = onBackgroundLight,
  surface = surfaceLight,
  onSurface = onSurfaceLight,
  surfaceVariant = surfaceVariantLight,
  onSurfaceVariant = onSurfaceVariantLight,
  surfaceTint = inversePrimaryLight,
  inverseOnSurface = inverseOnSurfaceLight,
  inverseSurface = inverseSurfaceLight,
  error = errorLight,
  onError = onErrorLight,
  errorContainer = errorContainerLight,
  onErrorContainer = onErrorContainerLight,
  outline = outlineLight,
  outlineVariant = outlineVariantLight,
  scrim = scrimLight,
  surfaceBright = surfaceBrightLight,
  surfaceContainer = surfaceContainerLight,
  surfaceContainerHigh = surfaceContainerHighLight,
  surfaceContainerHighest = surfaceContainerHighestLight,
  surfaceContainerLow = surfaceContainerLowLight,
  surfaceContainerLowest = surfaceContainerLowestLight,
  surfaceDim = surfaceDimLight,
)

internal val mybraryDarkColorScheme = darkColorScheme(
  primary = primaryDark,
  onPrimary = onPrimaryDark,
  primaryContainer = primaryContainerDark,
  onPrimaryContainer = onPrimaryContainerDark,
  inversePrimary = inversePrimaryDark,
  secondary = secondaryDark,
  onSecondary = onSecondaryDark,
  secondaryContainer = secondaryContainerDark,
  onSecondaryContainer = onSecondaryContainerDark,
  tertiary = tertiaryDark,
  onTertiary = onTertiaryDark,
  tertiaryContainer = tertiaryContainerDark,
  onTertiaryContainer = onTertiaryContainerDark,
  background = backgroundDark,
  onBackground = onBackgroundDark,
  surface = surfaceDark,
  onSurface = onSurfaceDark,
  surfaceVariant = surfaceVariantDark,
  onSurfaceVariant = onSurfaceVariantDark,
  surfaceTint = inversePrimaryDark,
  inverseOnSurface = inverseOnSurfaceDark,
  inverseSurface = inverseSurfaceDark,
  error = errorDark,
  onError = onErrorDark,
  errorContainer = errorContainerDark,
  onErrorContainer = onErrorContainerDark,
  outline = outlineDark,
  outlineVariant = outlineVariantDark,
  scrim = scrimDark,
  surfaceBright = surfaceBrightDark,
  surfaceContainer = surfaceContainerDark,
  surfaceContainerHigh = surfaceContainerHighDark,
  surfaceContainerHighest = surfaceContainerHighestDark,
  surfaceContainerLow = surfaceContainerLowDark,
  surfaceContainerLowest = surfaceContainerLowestDark,
  surfaceDim = surfaceDimDark,
)
